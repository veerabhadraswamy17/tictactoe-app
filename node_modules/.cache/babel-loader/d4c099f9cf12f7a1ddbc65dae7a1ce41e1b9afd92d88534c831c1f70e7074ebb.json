{"ast":null,"code":"var _jsxFileName = \"/Users/veerabhadraswamy/Desktop/projects/tictactoe/tictactoe-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(''));\n  const [currentPlayer, setCurrentPlayer] = useState('X');\n  const [winner, setWinner] = useState('');\n  const makeMove = index => {\n    if (board[index] === '' && !winner) {\n      const updatedBoard = [...board];\n      updatedBoard[index] = currentPlayer;\n      setBoard(updatedBoard);\n      setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\n      checkWin(updatedBoard);\n    }\n  };\n  const checkWin = board => {\n    const winningCombinations = [[0, 1, 2], [3, 4, 5], [6, 7, 8],\n    // rows\n    [0, 3, 6], [1, 4, 7], [2, 5, 8],\n    // columns\n    [0, 4, 8], [2, 4, 6] // diagonals\n    ];\n\n    for (const combination of winningCombinations) {\n      const [a, b, c] = combination;\n      if (board[a] === board[b] && board[b] === board[c] && board[a] !== '') {\n        setWinner(board[a]);\n        return;\n      }\n    }\n    if (board.every(cell => cell !== '')) {\n      setWinner('draw');\n    }\n  };\n  const resetGame = () => {\n    setBoard(Array(9).fill(''));\n    setCurrentPlayer('X');\n    setWinner('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((cell, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        onClick: () => makeMove(index),\n        children: cell\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [winner === 'draw' ? 'It\\'s a draw!' : `Player ${winner} wins!`, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ob8ymf3MU+zPnnbcS1Xxdyf9vjw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","board","setBoard","Array","fill","currentPlayer","setCurrentPlayer","winner","setWinner","makeMove","index","updatedBoard","checkWin","winningCombinations","combination","a","b","c","every","cell","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["/Users/veerabhadraswamy/Desktop/projects/tictactoe/tictactoe-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [board, setBoard] = useState(Array(9).fill(''));\n  const [currentPlayer, setCurrentPlayer] = useState('X');\n  const [winner, setWinner] = useState('');\n\n  const makeMove = (index) => {\n    if (board[index] === '' && !winner) {\n      const updatedBoard = [...board];\n      updatedBoard[index] = currentPlayer;\n      setBoard(updatedBoard);\n      setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\n      checkWin(updatedBoard);\n    }\n  };\n\n  const checkWin = (board) => {\n    const winningCombinations = [\n      [0, 1, 2], [3, 4, 5], [6, 7, 8], // rows\n      [0, 3, 6], [1, 4, 7], [2, 5, 8], // columns\n      [0, 4, 8], [2, 4, 6] // diagonals\n    ];\n\n    for (const combination of winningCombinations) {\n      const [a, b, c] = combination;\n      if (board[a] === board[b] && board[b] === board[c] && board[a] !== '') {\n        setWinner(board[a]);\n        return;\n      }\n    }\n\n    if (board.every(cell => cell !== '')) {\n      setWinner('draw');\n    }\n  };\n\n  const resetGame = () => {\n    setBoard(Array(9).fill(''));\n    setCurrentPlayer('X');\n    setWinner('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Tic Tac Toe</h1>\n      <div className=\"board\">\n        {board.map((cell, index) => (\n          <div\n            key={index}\n            className=\"cell\"\n            onClick={() => makeMove(index)}\n          >\n            {cell}\n          </div>\n        ))}\n      </div>\n      {winner && (\n        <div className=\"result\">\n          {winner === 'draw' ? 'It\\'s a draw!' : `Player ${winner} wins!`}\n          <button onClick={resetGame}>Play Again</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}