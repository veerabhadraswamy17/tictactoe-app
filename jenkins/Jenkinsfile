pipeline {
  agent any
    
  tools {nodejs "nodejs"
         dockerTool "docker"
        }

  environment {
    DOCKERHUB_CREDENTIALS = credentials('dockerhub')
    DOCKER_IMAGE_TAG = "2.0" // Initialize the Docker image tag
  }
    
  stages {

    stage('Clear Workspace') {
            steps {
                // Delete the workspace
                deleteDir()
            }
        }
    stage('Cloning Git') {
      steps {
        script{
          git branch: 'main',
              credentialsId: 'github',
              url: 'https://github.com/veerabhadraswamy17/tictactoe-app.git'
        }
      }
    }
        
    stage('Install dependencies') {
      steps {
        script {
                    // Your Node.js build script
                    sh '''
                        npm install
                    '''
                }
      }
    }
     
    stage('Build') {
      steps {
         sh 'npm run build'
      }
    }
   
    stage('Check Docker Version') {
    	agent any
      steps {
        sh 'docker --version'
      }
    }
    stage('Docker Build') {
    	agent any
      steps {
      	sh 'docker build -t veerabhadraswami/tictactoe:${DOCKER_IMAGE_TAG} .'
      }
    }

    // stage('DockerHub Login') {
    //   steps {
    //     sh 'docker login -username $DOCKERHUB_CREDENTIALS_USR -p $DOCKERHUB_CREDENTIALS_PSW'
    //   }
    // }
    stage('Docker Push') {
    	agent any
      steps {
      	withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'dockerhubPassword', usernameVariable: 'dockerhubUser')]) {
        	sh "docker login -u ${env.dockerhubUser} -p ${env.dockerhubPassword}"
          sh 'docker push veerabhadraswami/tictactoe:${DOCKER_IMAGE_TAG}'
          
        }
      }
    }

    stage('Docker Remove Local Image') {
    	agent any
      steps {
      	sh 'docker rmi veerabhadraswami/tictactoe:${DOCKER_IMAGE_TAG}'
      }
    }
    
    // stage('Docker Push') {
    //   steps {
    //     sh 'docker push veerabhadraswami/tictactoe:1.0'
    //   }
    // }
    // stage('Docker Build') {
    //   agent {
    //     docker {
    //       image 'docker' // Specify the Docker tool name defined in Jenkins
    //       args '-u root' // Run as root for Docker build (use with caution)
    //     }
    //   }
    //   steps {
    //     // sh 'docker build -t veerabhadraswami/tictactoe:latest .'
    //     sh 'docker --version'
    //   }
    // }
    
  }
    post {
    always {
      sh 'docker logout'
    }
       success {
      script {
        // Increment the Docker image tag for the next build
        def currentTag = Integer.parseInt(env.DOCKER_IMAGE_TAG)
        currentTag++
        env.DOCKER_IMAGE_TAG = currentTag.toString()
      }
    }
  }
     
}
